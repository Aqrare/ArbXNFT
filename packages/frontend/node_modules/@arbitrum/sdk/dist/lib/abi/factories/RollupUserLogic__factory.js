"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RollupUserLogic__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "sendRoot",
                type: "bytes32",
            },
        ],
        name: "NodeConfirmed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "parentNodeHash",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "nodeHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "executionHash",
                type: "bytes32",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "beforeState",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "afterState",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "numBlocks",
                        type: "uint64",
                    },
                ],
                indexed: false,
                internalType: "struct RollupLib.Assertion",
                name: "assertion",
                type: "tuple",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "afterInboxBatchAcc",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "wasmModuleRoot",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "inboxMaxCount",
                type: "uint256",
            },
        ],
        name: "NodeCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "NodeRejected",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint64",
                name: "challengeIndex",
                type: "uint64",
            },
            {
                indexed: false,
                internalType: "address",
                name: "asserter",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "challenger",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "challengedNode",
                type: "uint64",
            },
        ],
        name: "RollupChallengeStarted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "machineHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
        ],
        name: "RollupInitialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "UpgradedSecondary",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "initialBalance",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "finalBalance",
                type: "uint256",
            },
        ],
        name: "UserStakeUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "initialBalance",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "finalBalance",
                type: "uint256",
            },
        ],
        name: "UserWithdrawableFundsUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "_stakerMap",
        outputs: [
            {
                internalType: "uint256",
                name: "amountStaked",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "index",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "latestStakedNode",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "currentChallenge",
                type: "uint64",
            },
            {
                internalType: "bool",
                name: "isStaked",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "stakerAddress",
                type: "address",
            },
        ],
        name: "addToDeposit",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "amountStaked",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "baseStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "bridge",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "chainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "challengeManager",
        outputs: [
            {
                internalType: "contract IChallengeManager",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "challengeIndex",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "winningStaker",
                type: "address",
            },
            {
                internalType: "address",
                name: "losingStaker",
                type: "address",
            },
        ],
        name: "completeChallenge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "sendRoot",
                type: "bytes32",
            },
        ],
        name: "confirmNextNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "confirmPeriodBlocks",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "countStakedZombies",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "countZombiesStakedOnChildren",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[2]",
                name: "stakers",
                type: "address[2]",
            },
            {
                internalType: "uint64[2]",
                name: "nodeNums",
                type: "uint64[2]",
            },
            {
                internalType: "enum MachineStatus[2]",
                name: "machineStatuses",
                type: "uint8[2]",
            },
            {
                components: [
                    {
                        internalType: "bytes32[2]",
                        name: "bytes32Vals",
                        type: "bytes32[2]",
                    },
                    {
                        internalType: "uint64[2]",
                        name: "u64Vals",
                        type: "uint64[2]",
                    },
                ],
                internalType: "struct GlobalState[2]",
                name: "globalStates",
                type: "tuple[2]",
            },
            {
                internalType: "uint64",
                name: "numBlocks",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "secondExecutionHash",
                type: "bytes32",
            },
            {
                internalType: "uint256[2]",
                name: "proposedTimes",
                type: "uint256[2]",
            },
            {
                internalType: "bytes32[2]",
                name: "wasmModuleRoots",
                type: "bytes32[2]",
            },
        ],
        name: "createChallenge",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "currentChallenge",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "currentRequiredStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extraChallengeTimeBlocks",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "firstUnresolvedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
        ],
        name: "getNode",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "stateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "challengeHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "confirmData",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint64",
                        name: "prevNum",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "deadlineBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "noChildConfirmedBeforeBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "stakerCount",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "childStakerCount",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "firstChildBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "latestChildNumber",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "createdAtBlock",
                        type: "uint64",
                    },
                    {
                        internalType: "bytes32",
                        name: "nodeHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Node",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "getStaker",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amountStaked",
                        type: "uint256",
                    },
                    {
                        internalType: "uint64",
                        name: "index",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "latestStakedNode",
                        type: "uint64",
                    },
                    {
                        internalType: "uint64",
                        name: "currentChallenge",
                        type: "uint64",
                    },
                    {
                        internalType: "bool",
                        name: "isStaked",
                        type: "bool",
                    },
                ],
                internalType: "struct IRollupCore.Staker",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "stakerNum",
                type: "uint64",
            },
        ],
        name: "getStakerAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "inbox",
        outputs: [
            {
                internalType: "contract IInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_stakeToken",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isERC20Enabled",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isStaked",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isStakedOnLatestConfirmed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "isValidator",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "isZombie",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastStakeBlock",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestConfirmed",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestNodeCreated",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "latestStakedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "loserStakeEscrow",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "minimumAssertionPeriod",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "nodeHash",
                type: "bytes32",
            },
        ],
        name: "newStakeOnExistingNode",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "beforeState",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "afterState",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "numBlocks",
                        type: "uint64",
                    },
                ],
                internalType: "struct RollupLib.Assertion",
                name: "assertion",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "expectedNodeHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "prevNodeInboxMaxCount",
                type: "uint256",
            },
        ],
        name: "newStakeOnNewNode",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                internalType: "address",
                name: "staker",
                type: "address",
            },
        ],
        name: "nodeHasStaker",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "outbox",
        outputs: [
            {
                internalType: "contract IOutbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "target",
                type: "uint256",
            },
        ],
        name: "reduceDeposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "stakerAddress",
                type: "address",
            },
        ],
        name: "rejectNextNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "startIndex",
                type: "uint256",
            },
        ],
        name: "removeOldZombies",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "zombieNum",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "maxNodes",
                type: "uint256",
            },
        ],
        name: "removeZombie",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "nodeNum",
                type: "uint256",
            },
        ],
        name: "requireUnresolved",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "requireUnresolvedExists",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "blockNumber",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "firstUnresolvedNodeNum",
                type: "uint64",
            },
            {
                internalType: "uint64",
                name: "latestCreatedNode",
                type: "uint64",
            },
        ],
        name: "requiredStake",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "stakerAddress",
                type: "address",
            },
        ],
        name: "returnOldDeposit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupDeploymentBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rollupEventInbox",
        outputs: [
            {
                internalType: "contract IRollupEventInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerInbox",
        outputs: [
            {
                internalType: "contract ISequencerInbox",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "nodeNum",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "nodeHash",
                type: "bytes32",
            },
        ],
        name: "stakeOnExistingNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "beforeState",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32[2]",
                                        name: "bytes32Vals",
                                        type: "bytes32[2]",
                                    },
                                    {
                                        internalType: "uint64[2]",
                                        name: "u64Vals",
                                        type: "uint64[2]",
                                    },
                                ],
                                internalType: "struct GlobalState",
                                name: "globalState",
                                type: "tuple",
                            },
                            {
                                internalType: "enum MachineStatus",
                                name: "machineStatus",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RollupLib.ExecutionState",
                        name: "afterState",
                        type: "tuple",
                    },
                    {
                        internalType: "uint64",
                        name: "numBlocks",
                        type: "uint64",
                    },
                ],
                internalType: "struct RollupLib.Assertion",
                name: "assertion",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "expectedNodeHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "prevNodeInboxMaxCount",
                type: "uint256",
            },
        ],
        name: "stakeOnNewNode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stakeToken",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "stakerCount",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalWithdrawableFunds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorUtils",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "validatorWalletCreator",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "wasmModuleRoot",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawStakerFunds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "withdrawableFunds",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "zombieNum",
                type: "uint256",
            },
        ],
        name: "zombieAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "zombieCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "zombieNum",
                type: "uint256",
            },
        ],
        name: "zombieLatestStakedNode",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a06040523060805234801561001457600080fd5b506080516157836200003f600039600081816110ec015281816126df015261276401526157836000f3fe6080604052600436106103435760003560e01c806376e7e23b116101b2578063cd205fda116100ed578063e8bd492211610090578063e8bd492214610ae7578063edfd03ed14610b7c578063ee35f32714610b9c578063ef40a67014610bbc578063f065de3f14610bdc578063f33e1fac14610bfc578063facd743b14610c1c578063fb0e722b14610c4c57600080fd5b8063cd205fda14610a0a578063ce11e6ab14610a2a578063ced01cfb14610a4a578063d01e660214610a5d578063d735e21d14610a7d578063dcd030aa14610a92578063dff6978714610ab2578063e78cea9214610ac757600080fd5b806392c8134c1161015557806392c8134c146108185780639a8a059214610845578063a23c44b11461085b578063aa38a6e71461096a578063aa65af481461098a578063b0ebedc7146109aa578063bc45e0ae146109ca578063c4d66de8146109ea57600080fd5b806376e7e23b14610736578063771b2f971461074c5780637ba9534a146107735780637e2d2155146107885780638640ce5f146107a85780638da5cb5b146107cd5780638ee1a126146107e257806391c657e8146107f857600080fd5b806354ce89611161028257806367425daf1161022557806367425daf1461064b57806369fd251c146106605780636b94c33b146106805780636d08d0a2146106a05780636ddd3744146106c05780636f57644e146106e057806371ef232c146107005780637427be511461071657600080fd5b806354ce89611461055f5780635c617e941461057f5780635c975abb1461059f5780635eb405d5146105c357806361373919146105e35780636177fd18146105f857806363721d6b1461061857806365f7f80d1461062d57600080fd5b80632f30cabd116102ea5780632f30cabd146104835780633e96576e146104b957806345c5b2c7146104d957806345e38b64146104ec5780634774e576146105025780634d26732d1461051557806351ed6a301461052a57806352d1902d1461054a57600080fd5b8063014cc92c14610348578063023a96fe146103855780630357aa49146103a55780631aeb55a0146103c75780631b1689e9146103e75780631e83d30f1461040b5780632b2af0ab1461042b5780632e7acfa61461044b575b600080fd5b34801561035457600080fd5b50606f54610368906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561039157600080fd5b50606e54610368906001600160a01b031681565b3480156103b157600080fd5b506103c56103c0366004614c3d565b610c6c565b005b3480156103d357600080fd5b506103c56103e2366004614c8e565b610d3f565b3480156103f357600080fd5b506103fd607d5481565b60405190815260200161037c565b34801561041757600080fd5b506103c5610426366004614cba565b610ef2565b34801561043757600080fd5b506103c5610446366004614cba565b610f6f565b34801561045757600080fd5b5060655461046b906001600160401b031681565b6040516001600160401b03909116815260200161037c565b34801561048f57600080fd5b506103fd61049e366004614cd3565b6001600160a01b03166000908152607b602052604090205490565b3480156104c557600080fd5b5061046b6104d4366004614cd3565b611013565b6103c56104e7366004614cd3565b611041565b3480156104f857600080fd5b506103fd60735481565b6103c5610510366004614cee565b61109d565b34801561052157600080fd5b506103fd6110b1565b34801561053657600080fd5b50607254610368906001600160a01b031681565b34801561055657600080fd5b506103fd6110df565b34801561056b57600080fd5b506103c561057a366004614cee565b6111a4565b34801561058b57600080fd5b506103fd61059a366004614d2b565b6113fa565b3480156105ab57600080fd5b5060335460ff165b604051901515815260200161037c565b3480156105cf57600080fd5b506103c56105de366004614d48565b61144e565b3480156105ef57600080fd5b506103fd611764565b34801561060457600080fd5b506105b3610613366004614cd3565b611854565b34801561062457600080fd5b50607a546103fd565b34801561063957600080fd5b506075546001600160401b031661046b565b34801561065757600080fd5b506103c561187c565b34801561066c57600080fd5b5061046b61067b366004614cd3565b611906565b34801561068c57600080fd5b506103c561069b366004614cd3565b611934565b3480156106ac57600080fd5b506103fd6106bb366004614d2b565b611c5f565b3480156106cc57600080fd5b506103686106db366004614d2b565b611ce2565b3480156106ec57600080fd5b506103c56106fb366004614d7b565b611d1b565b34801561070c57600080fd5b506103fd607c5481565b34801561072257600080fd5b506103c5610731366004614cd3565b612328565b34801561074257600080fd5b506103fd60675481565b34801561075857600080fd5b5060655461046b90600160401b90046001600160401b031681565b34801561077f57600080fd5b5061046b6123e5565b34801561079457600080fd5b506103c56107a3366004614d48565b6123fb565b3480156107b457600080fd5b50607554600160c01b90046001600160401b031661046b565b3480156107d957600080fd5b50610368612552565b3480156107ee57600080fd5b506103fd60685481565b34801561080457600080fd5b506105b3610813366004614cd3565b612561565b34801561082457600080fd5b50610838610833366004614d2b565b6125c5565b60405161037c9190614e1b565b34801561085157600080fd5b506103fd60665481565b34801561086757600080fd5b50610915610876366004614cd3565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0316600090815260796020908152604091829020825160a081018452815481526001909101546001600160401b0380821693830193909352600160401b8104831693820193909352600160801b83049091166060820152600160c01b90910460ff161515608082015290565b60405161037c9190600060a0820190508251825260208301516001600160401b038082166020850152806040860151166040850152806060860151166060850152505060808301511515608083015292915050565b34801561097657600080fd5b50606d54610368906001600160a01b031681565b34801561099657600080fd5b506105b36109a5366004614f17565b61267d565b3480156109b657600080fd5b506103fd6109c5366004614f4c565b6126b4565b3480156109d657600080fd5b50607054610368906001600160a01b031681565b3480156109f657600080fd5b506103c5610a05366004614cd3565b6126d4565b348015610a1657600080fd5b506072546001600160a01b031615156105b3565b348015610a3657600080fd5b50606b54610368906001600160a01b031681565b6103c5610a58366004614c8e565b612894565b348015610a6957600080fd5b50610368610a78366004614cba565b6128ab565b348015610a8957600080fd5b5061046b6128c0565b348015610a9e57600080fd5b506105b3610aad366004614cd3565b6128d6565b348015610abe57600080fd5b5060785461046b565b348015610ad357600080fd5b50606a54610368906001600160a01b031681565b348015610af357600080fd5b50610b44610b02366004614cd3565b607960205260009081526040902080546001909101546001600160401b0380821691600160401b8104821691600160801b82041690600160c01b900460ff1685565b604080519586526001600160401b0394851660208701529284169285019290925290911660608301521515608082015260a00161037c565b348015610b8857600080fd5b506103c5610b97366004614cba565b612919565b348015610ba857600080fd5b50606c54610368906001600160a01b031681565b348015610bc857600080fd5b506103fd610bd7366004614cd3565b6129f5565b348015610be857600080fd5b50607154610368906001600160a01b031681565b348015610c0857600080fd5b5061046b610c17366004614cba565b612a10565b348015610c2857600080fd5b506105b3610c37366004614cd3565b60746020526000908152604090205460ff1681565b348015610c5857600080fd5b50606954610368906001600160a01b031681565b60335460ff1615610c985760405162461bcd60e51b8152600401610c8f90614f8e565b60405180910390fd5b606e546001600160a01b03163314610ce15760405162461bcd60e51b815260206004820152600c60248201526b2ba927a723afa9a2a72222a960a11b6044820152606401610c8f565b610ceb8282612a47565b6001600160401b03168314610d305760405162461bcd60e51b815260206004820152600b60248201526a1393d517d25397d0d2105360aa1b6044820152606401610c8f565b610d3a8282612b15565b505050565b3360009081526074602052604090205460ff16610d6e5760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff1615610d915760405162461bcd60e51b8152600401610c8f90614f8e565b610d9a336128d6565b610db65760405162461bcd60e51b8152600401610c8f90614fdf565b610dbe6128c0565b6001600160401b0316826001600160401b031610158015610df85750610de26123e5565b6001600160401b0316826001600160401b031611155b610e3c5760405162461bcd60e51b81526020600482015260156024820152744e4f44455f4e554d5f4f55545f4f465f52414e474560581b6044820152606401610c8f565b6000610e4783612bcb565b905081816005015414610e895760405162461bcd60e51b815260206004820152600a6024820152694e4f44455f52454f524760b01b6044820152606401610c8f565b60038101546001600160401b0316610ea033611013565b6001600160401b031614610ee85760405162461bcd60e51b815260206004820152600f60248201526e2727aa2fa9aa20a5a2a22fa82922ab60891b6044820152606401610c8f565b610d3a3384612be5565b3360009081526074602052604090205460ff16610f215760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff1615610f445760405162461bcd60e51b8152600401610c8f90614f8e565b610f4d33612c36565b6000610f576110b1565b905080821015610f65578091505b610d3a3383612ca6565b610f776128c0565b6001600160401b0316811015610fc15760405162461bcd60e51b815260206004820152600f60248201526e1053149150511657d11150d2511151608a1b6044820152606401610c8f565b610fc96123e5565b6001600160401b03168111156110105760405162461bcd60e51b815260206004820152600c60248201526b1113d154d39517d1561254d560a21b6044820152606401610c8f565b50565b6001600160a01b0316600090815260796020526040902060010154600160401b90046001600160401b031690565b3360009081526074602052604090205460ff166110705760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff16156110935760405162461bcd60e51b8152600401610c8f90614f8e565b6110108134612d59565b6110a634612dbe565b610d3a8383836111a4565b6000806110bc6128c0565b90506110d943826110cb6123e5565b6001600160401b0316612ed3565b91505090565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461117f5760405162461bcd60e51b815260206004820152603b60248201527f555550534e6f745570677261646561626c653a206d757374206e6f742062652060448201527f63616c6c6564207468726f7567682064656c656761746563616c6c00000000006064820152608401610c8f565b507f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d90565b3360009081526074602052604090205460ff166111d35760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff16156111f65760405162461bcd60e51b8152600401610c8f90614f8e565b6111ff336128d6565b61121b5760405162461bcd60e51b8152600401610c8f90614fdf565b600061122633611013565b90506000611233826125c5565b610140015161124b906001600160401b031643615019565b905060735481101561128c5760405162461bcd60e51b815260206004820152600a60248201526954494d455f44454c544160b01b6044820152606401610c8f565b60026112a061014087016101208801615055565b60038111156112b1576112b1615030565b14806112df5750826112d36112ce36889003880160a08901615171565b61313b565b6001600160401b031610155b6113175760405162461bcd60e51b81526020600482015260096024820152681513d3d7d4d350531360ba1b6044820152606401610c8f565b600061132b61016087016101408801614d2b565b6001600160401b0316116113735760405162461bcd60e51b815260206004820152600f60248201526e22a6a82a2cafa0a9a9a2a92a24a7a760891b6044820152606401610c8f565b600161138560a0870160808801615055565b600381111561139657611396615030565b146113d55760405162461bcd60e51b815260206004820152600f60248201526e4241445f505245565f53544154555360881b6044820152606401610c8f565b506113e284828486613150565b506113f4336113ef6123e5565b612be5565b50505050565b600080611406607a5490565b90506000805b8281101561144657611421856109a5836128ab565b1561143457816114308161518d565b9250505b8061143e8161518d565b91505061140c565b509392505050565b3360009081526074602052604090205460ff1661147d5760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff16156114a05760405162461bcd60e51b8152600401610c8f90614f8e565b6114a861187c565b60006114b26128c0565b905060006114bf82612bcb565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e08701529182048316610100860152810482166101208501529190910416610140820152600582015461016082015290915061156b9061373b565b60755460038201546001600160401b0390811691161461158d5761158d6151a8565b60038101546000906115a7906001600160401b0316612bcb565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260058201546101608201529091506116539061378a565b61165d6000612919565b6000611668846113fa565b60038401549091506000908290611687906001600160401b0316611c5f565b6116919190615019565b6003850154909150600160c01b90046001600160401b031682106116e45760405162461bcd60e51b815260206004820152600a6024820152694e4f5f5354414b45525360b01b6044820152606401610c8f565b6003840154611704908290600160c01b90046001600160401b03166151be565b60048401546001600160401b0316146117505760405162461bcd60e51b815260206004820152600e60248201526d1393d517d0531317d4d51052d15160921b6044820152606401610c8f565b61175b8588886137da565b50505050505050565b3360009081526074602052604081205460ff166117935760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff16156117b65760405162461bcd60e51b8152600401610c8f90614f8e565b60006117c133613929565b604051909150600090339083908381818185875af1925050503d8060008114611806576040519150601f19603f3d011682016040523d82523d6000602084013e61180b565b606091505b505090508061184e5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610c8f565b50905090565b6001600160a01b0316600090815260796020526040902060010154600160c01b900460ff1690565b60006118866128c0565b6001600160401b031690506118a36075546001600160401b031690565b6001600160401b0316811180156118ca57506118bd6123e5565b6001600160401b03168111155b6110105760405162461bcd60e51b815260206004820152600d60248201526c1393d7d553949154d3d3159151609a1b6044820152606401610c8f565b6001600160a01b0316600090815260796020526040902060010154600160801b90046001600160401b031690565b3360009081526074602052604090205460ff166119635760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff16156119865760405162461bcd60e51b8152600401610c8f90614f8e565b61198e61187c565b60006119a26075546001600160401b031690565b905060006119ae6128c0565b905060006119bb82612bcb565b60038101549091506001600160401b0384811691161415611c1d576119df846128d6565b6119fb5760405162461bcd60e51b8152600401610c8f90614fdf565b611a15611a0785611013565b6001600160401b0316610f6f565b611a1f828561267d565b15611a5f5760405162461bcd60e51b815260206004820152601060248201526f14d51052d15117d3d397d5105491d15560821b6044820152606401610c8f565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e087015291820483166101008601528104821661012085015291909104166101408201526005820154610160820152611b089061373b565b611bba611b1484612bcb565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015261378a565b611bc46000612919565b611bcd826113fa565b6003820154600160c01b90046001600160401b031614611c1d5760405162461bcd60e51b815260206004820152600b60248201526a4841535f5354414b45525360a81b6044820152606401610c8f565b611c256139aa565b6040516001600160401b038316907feaffa3d968707ec919a2fc9f31d5ab2b86c905881ff561725d5a82fc95ad464090600090a250505050565b600080611c6b607a5490565b90506000805b82811015611446576000611c84826139f1565b80549091506001600160401b03878116600160a01b9092041614801590611cbc57508054611cbc9087906001600160a01b031661267d565b15611ccf5782611ccb8161518d565b9350505b5080611cda8161518d565b915050611c71565b60006078826001600160401b031681548110611d0057611d006151d6565b6000918252602090912001546001600160a01b031692915050565b3360009081526074602052604090205460ff16611d4a5760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff1615611d6d5760405162461bcd60e51b8152600401610c8f90614f8e565b611d7d6040880160208901614d2b565b6001600160401b0316611d936020890189614d2b565b6001600160401b031610611dd75760405162461bcd60e51b815260206004820152600b60248201526a2ba927a723afa7a92222a960a91b6044820152606401610c8f565b611ddf6123e5565b6001600160401b0316611df86040890160208a01614d2b565b6001600160401b03161115611e3e5760405162461bcd60e51b815260206004820152600c60248201526b1393d517d41493d413d4d15160a21b6044820152606401610c8f565b611e4b6020880188614d2b565b6001600160401b0316611e666075546001600160401b031690565b6001600160401b031610611eb05760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3919254935151607a1b6044820152606401610c8f565b6000611ed088825b602002016020810190611ecb9190614d2b565b612bcb565b90506000611edf896001611eb8565b600380820154908401549192506001600160401b03918216911614611f325760405162461bcd60e51b81526020600482015260096024820152682224a3232fa82922ab60b91b6044820152606401610c8f565b611f518a60005b602002016020810190611f4c9190614cd3565b612c36565b611f5c8a6001611f39565b611f83611f6c60208b018b614d2b565b8b60005b6020020160208101906109a59190614cd3565b611fc45760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c57d393d517d4d51052d15160721b6044820152606401610c8f565b611fdf611fd760408b0160208c01614d2b565b8b6001611f70565b6120205760405162461bcd60e51b815260206004820152601260248201527114d51052d1548c97d393d517d4d51052d15160721b6044820152606401610c8f565b6040805180820182526120a19161209191908b90600290839083908082843760009201829052506040805180820190915292508c9150600290835b828210156120875761207860808302850136819003810190615171565b8152602001906001019061205b565b5050505089613a17565b85358560005b6020020135613ac1565b8260010154146120e05760405162461bcd60e51b815260206004820152600a6024820152694348414c5f484153483160b01b6044820152606401610c8f565b6120f1856020860135856001612097565b8160010154146121305760405162461bcd60e51b815260206004820152600a60248201526921a420a62fa420a9a41960b11b6044820152606401610c8f565b60655460038301546000916001600160401b03600160401b9182900481169261215e92893592910416615019565b6003850154612175906001600160401b0316612bcb565b600401546121939190600160401b90046001600160401b03166151be565b61219d91906151be565b905060208501358110156121d8576121d06121bb60208d018d614cd3565b6121cb60408e0160208f01614cd3565b612b15565b50505061231e565b60006122008c8b8b8b896121ed8c3589615019565b6121fb60208e01358a615019565b613aff565b905061228361221260208e018e614cd3565b8d60016020020160208101906122289190614cd3565b6001600160a01b03918216600090815260796020526040808220600190810180546001600160401b038916600160801b0267ffffffffffffffff60801b19918216811790925594909516835291200180549091169091179055565b6001600160401b0381167f6db7dc2f507647d135035469b27aa79cea90582779d084a7821d6cd092cbd8736122bb60208f018f614cd3565b8e60016020020160208101906122d19190614cd3565b8e60006020020160208101906122e79190614d2b565b604080516001600160a01b0394851681529390921660208401526001600160401b03169082015260600160405180910390a2505050505b5050505050505050565b3360009081526074602052604090205460ff166123575760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff161561237a5760405162461bcd60e51b8152600401610c8f90614f8e565b6075546001600160401b031661238f82611013565b6001600160401b031611156123d35760405162461bcd60e51b815260206004820152600a6024820152691513d3d7d49150d1539560b21b6044820152606401610c8f565b6123dc81612c36565b61101081613bbe565b607554600160801b90046001600160401b031690565b3360009081526074602052604090205460ff1661242a5760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff161561244d5760405162461bcd60e51b8152600401610c8f90614f8e565b607a54821061248f5760405162461bcd60e51b815260206004820152600e60248201526d4e4f5f535543485f5a4f4d42494560901b6044820152606401610c8f565b600061249a836128ab565b905060006124a784612a10565b90506000806124be6075546001600160401b031690565b6001600160401b031690505b80836001600160401b0316101580156124e257508482105b156125215760006124f284612bcb565b90506124fe8486613c6e565b60038101546001600160401b03169350826125188161518d565b935050506124ca565b80836001600160401b031610156125405761253b86613db8565b61254a565b61254a8684613e7e565b505050505050565b600061255c613ec7565b905090565b6000805b607a548110156125bc57607a8181548110612582576125826151d6565b6000918252602090912001546001600160a01b03848116911614156125aa5750600192915050565b806125b48161518d565b915050612565565b50600092915050565b6125cd614afc565b6125d682612bcb565b6040805161018081018252825481526001830154602082015260028301549181019190915260038201546001600160401b038082166060840152600160401b80830482166080850152600160801b808404831660a0860152600160c01b93849004831660c0860152600486015480841660e0870152918204831661010086015281048216610120850152919091041661014082015260059091015461016082015292915050565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60006126ca8484846001600160401b0316612ed3565b90505b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156127625760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610c8f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316612794613efa565b6001600160a01b0316146127ff5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610c8f565b6001600160a01b038116156128495760405162461bcd60e51b815260206004820152601060248201526f1393d7d513d2d15397d0531313d5d15160821b6044820152606401610c8f565b6072546001600160a01b0316156110105760405162461bcd60e51b815260206004820152600f60248201526e046414345545f4e4f545f455243323608c1b6044820152606401610c8f565b61289d34612dbe565b6128a78282610d3f565b5050565b6000607a8281548110611d0057611d006151d6565b607554600160401b90046001600160401b031690565b6001600160a01b038116600090815260796020526040812060010154600160c01b900460ff1680156126ae57506075546126ae906001600160401b03168361267d565b3360009081526074602052604090205460ff166129485760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff161561296b5760405162461bcd60e51b8152600401610c8f90614f8e565b6000612976607a5490565b9050600061298c6075546001600160401b031690565b6001600160401b03169050825b828110156113f4575b816129ac82612a10565b6001600160401b031610156129e3576129c481613db8565b826129ce816151ec565b9350508281106129de5750505050565b6129a2565b806129ed8161518d565b915050612999565b6001600160a01b031660009081526079602052604090205490565b6000607a8281548110612a2557612a256151d6565b600091825260209091200154600160a01b90046001600160401b031692915050565b6001600160a01b03828116600090815260796020526040808220928416825281206001830154919291600160801b90046001600160401b031680612ab75760405162461bcd60e51b81526020600482015260076024820152661393d7d0d2105360ca1b6044820152606401610c8f565b60018201546001600160401b03828116600160801b9092041614612b0c5760405162461bcd60e51b815260206004820152600c60248201526b1112519197d25397d0d2105360a21b6044820152606401610c8f565b95945050505050565b6000612b20826129f5565b90506000612b2d846129f5565b905080821115612b4e57612b418382612ca6565b612b4b9083615019565b91505b6000612b5b600284615219565b9050612b678582613f22565b612b718184615019565b9250612ba5856001600160a01b03166000908152607960205260409020600101805467ffffffffffffffff60801b19169055565b607154612bbb906001600160a01b031684613f87565b612bc484614023565b5050505050565b6001600160401b0316600090815260766020526040902090565b6001600160a01b0382166000908152607960205260409020612c0782846140c9565b60010180546001600160401b03909216600160401b0267ffffffffffffffff60401b1990921691909117905550565b612c3f81611854565b612c5b5760405162461bcd60e51b8152600401610c8f90614fdf565b6000612c6682611906565b6001600160401b0316146110105760405162461bcd60e51b8152602060048201526007602482015266125397d0d2105360ca1b6044820152606401610c8f565b6001600160a01b0382166000908152607960205260408120805480841115612d035760405162461bcd60e51b815260206004820152601060248201526f544f4f5f4c4954544c455f5354414b4560801b6044820152606401610c8f565b6000612d0f8583615019565b8584559050612d1e8682613f87565b60408051838152602081018790526001600160a01b0388169160008051602061572e833981519152910160405180910390a295945050505050565b3360009081526074602052604090205460ff16612d885760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff1615612dab5760405162461bcd60e51b8152600401610c8f90614f8e565b612db482612c36565b6128a78282613f22565b3360009081526074602052604090205460ff16612ded5760405162461bcd60e51b8152600401610c8f90614fb8565b60335460ff1615612e105760405162461bcd60e51b8152600401610c8f90614f8e565b612e1933611854565b15612e365760405162461bcd60e51b8152600401610c8f9061522d565b612e3f33612561565b15612e7f5760405162461bcd60e51b815260206004820152601060248201526f5354414b45525f49535f5a4f4d42494560801b6044820152606401610c8f565b612e876110b1565b811015612ec95760405162461bcd60e51b815260206004820152601060248201526f4e4f545f454e4f5547485f5354414b4560801b6044820152606401610c8f565b61101033826142a9565b600081612ee1600185615255565b6001600160401b03161415612ef957506067546126cd565b6000612f0484612bcb565b60030154600160401b90046001600160401b0316905080851015612f2c5750506067546126cd565b6000604051806101400160405280600162ffffff1681526020016201e05b62ffffff1681526020016201f7d162ffffff1681526020016201389162ffffff168152602001620329e162ffffff1681526020016201be4362ffffff1681526020016204cb8c62ffffff1681526020016201fbc462ffffff16815260200162036d3262ffffff1681526020016202797362ffffff1681525090506000604051806101400160405280600162ffffff1681526020016201c03062ffffff1681526020016201b69962ffffff16815260200161fde262ffffff168152602001620265c662ffffff16815260200162013b8e62ffffff168152602001620329e162ffffff1681526020016201389162ffffff1681526020016201f7d162ffffff1681526020016201537562ffffff168152509050600083886130699190615019565b6065549091506000906001600160401b031661308683600a61527d565b6130909190615219565b9050600061309f600a83615219565b6130aa906002615380565b90506000856130ba600a8561538c565b600a81106130ca576130ca6151d6565b60200201516130de9062ffffff168361527d565b90506000856130ee600a8661538c565b600a81106130fe576130fe6151d6565b60200201516131129062ffffff1683615219565b90508061311d575060015b8060675461312b919061527d565b9c9b505050505050505050505050565b6020810151600090815b602002015192915050565b6000600161316661014087016101208801615055565b600381111561317757613177615030565b14806131a55750600261319261014087016101208801615055565b60038111156131a3576131a3615030565b145b6131e45760405162461bcd60e51b815260206004820152601060248201526f4241445f41465445525f53544154555360801b6044820152606401610c8f565b6131ec614b60565b6131f5856125c5565b6060820152606a54604080516221048360e21b815290516001600160a01b03909216916284120c91600480820192602092909190829003018186803b15801561323d57600080fd5b505afa158015613251573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327591906153a0565b81526060810151516132878786614404565b146132c65760405162461bcd60e51b815260206004820152600f60248201526e0a0a48aacbea6a882a88abe9082a69608b1b6044820152606401610c8f565b60006132dd6112ce36899003890160a08a01615171565b905060006132f36112ce368a90038a018a615171565b9050806001600160401b0316826001600160401b031610156133495760405162461bcd60e51b815260206004820152600f60248201526e494e424f585f4241434b574152445360881b6044820152606401610c8f565b806001600160401b0316826001600160401b031614156133ef5761337a613375368a90038a018a615171565b61445e565b6001600160401b0316613398613375368b90038b0160a08c01615171565b6001600160401b031610156133ef5760405162461bcd60e51b815260206004820152601a60248201527f494e424f585f504f535f494e5f4d53475f4241434b57415244530000000000006044820152606401610c8f565b60026134036101408a016101208b01615055565b600381111561341457613414615030565b148061343d57506000613432613375368b90038b0160a08c01615171565b6001600160401b0316115b15613450578161344c816153b9565b9250505b82516001600160401b038316111561349b5760405162461bcd60e51b815260206004820152600e60248201526d12539093d617d41054d517d1539160921b6044820152606401610c8f565b6001600160401b0382161561354357606a546001600160a01b03166316bf55796134c6600185615255565b6040516001600160e01b031960e084901b1681526001600160401b03909116600482015260240160206040518083038186803b15801561350557600080fd5b505afa158015613519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061353d91906153a0565b60e08401525b5061355d90506135583688900388018861541f565b61446d565b6040820152606554613578906001600160401b031643615490565b6001600160401b0390811660c0830152606082015161012001511615801560a08301526135bf576135b181606001516101200151612bcb565b6005015460808201526135cf565b6060810151610160015160808201525b6135ee8160a00151826080015183604001518460e0015160685461450c565b9150828214806135fc575082155b61363f5760405162461bcd60e51b81526020600482015260146024820152730aa9c8ab0a08a86a88a88be9c9e888abe9082a6960631b6044820152606401610c8f565b6136876136538760a0018360000151614404565b613664836040015143606854613ac1565b61367b613676368b90038b018b61541f565b614579565b888560c00151876145a3565b602082015260006136966123e5565b6136a1906001615490565b905060006136ae87612bcb565b90506136ba81836145f7565b6136c78360200151614668565b505081816060015161016001516136dc6123e5565b6001600160401b03167f4f4caa9e67fb994e349dd35d1ad0ce23053d4323f83ce11dc817b5435031d09684604001518a8660e00151606854886000015160405161372a959493929190615545565b60405180910390a450949350505050565b80608001516001600160401b03164310156110105760405162461bcd60e51b815260206004820152600f60248201526e4245464f52455f444541444c494e4560881b6044820152606401610c8f565b8060a001516001600160401b03164310156110105760405162461bcd60e51b815260206004820152601060248201526f10d212531117d513d3d7d49150d1539560821b6044820152606401610c8f565b60006137e584612bcb565b90506137f1838361479f565b8160020154146138325760405162461bcd60e51b815260206004820152600c60248201526b434f4e4649524d5f4441544160a01b6044820152606401610c8f565b606b54604051630502677360e51b815260048101849052602481018590526001600160a01b039091169063a04cee6090604401600060405180830381600087803b15801561387f57600080fd5b505af1158015613893573d6000803e3d6000fd5b50506075805467ffffffffffffffff19166001600160401b038816179055506138bf9050846001615490565b6075805467ffffffffffffffff60401b1916600160401b6001600160401b03938416021790556040805185815260208101859052918616917f22ef0479a7ff660660d1c2fe35f1b632cf31675c2d9378db8cec95b00d8ffa3c91015b60405180910390a250505050565b6001600160a01b0381166000908152607b60205260408120805490829055607c8054829190849061395b908490615019565b909155505060408051828152600060208201526001600160a01b038516917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910160405180910390a292915050565b60758054600160401b90046001600160401b03169060086139ca836153b9565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6000607a8281548110613a0657613a066151d6565b906000526020600020019050919050565b60408051600280825260608201835260009283929190602083019080368337019050508551909150613a5990613a548660005b60200201516147bb565b61482f565b81600081518110613a6c57613a6c6151d6565b6020908102919091010152613a8d8560016020020151613a54866001613a4a565b81600181518110613aa057613aa06151d6565b602002602001018181525050612b0c6000846001600160401b031683614953565b6040805160208101859052908101839052606081018290526000906080015b6040516020818303038152906040528051906020012090509392505050565b606e546000906001600160a01b03166314eab5e78535898989613b2560208f018f614cd3565b8e6001602002016020810190613b3b9190614cd3565b8a8a6040518963ffffffff1660e01b8152600401613b609897969594939291906155a7565b602060405180830381600087803b158015613b7a57600080fd5b505af1158015613b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bb29190615657565b98975050505050505050565b6001600160a01b038116600090815260796020526040812090613be96075546001600160401b031690565b9050613bf5818461267d565b15613c2a5760018201546001600160401b03828116600160401b9092041614613c2057613c206151a8565b613c2a8184613c6e565b8154613c368482613f87565b613c3f8461496a565b60408051828152600060208201526001600160a01b0386169160008051602061572e833981519152910161391b565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff16613cba5760405162461bcd60e51b8152600401610c8f90614fdf565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff19169055613cf783612bcb565b600381018054919250600160c01b9091046001600160401b0316906018613d1d83615674565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505060006001600160401b0316836001600160401b03161115610d3a576003810154613d74906001600160401b0316612bcb565b60040180546001600160401b0316906000613d8e83615674565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050505050565b607a8054613dc890600190615019565b81548110613dd857613dd86151d6565b90600052602060002001607a8281548110613df557613df56151d6565b600091825260209091208254910180546001600160a01b039092166001600160a01b031983168117825592546001600160e01b0319909216909217600160a01b918290046001600160401b0316909102179055607a805480613e5957613e59615697565b600082815260209020810160001990810180546001600160e01b031916905501905550565b80607a8381548110613e9257613e926151d6565b9060005260206000200160000160146101000a8154816001600160401b0302191690836001600160401b031602179055505050565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b60007f2b1dbce74324248c222f0ec2d5ed7bd323cfc425b336f0253c5ccfda7265546d613eeb565b6001600160a01b038216600090815260796020526040812080549091613f4884836151be565b80845560408051848152602081018390529192506001600160a01b0387169160008051602061572e833981519152910160405180910390a25050505050565b6001600160a01b0382166000908152607b602052604081205490613fab83836151be565b6001600160a01b0385166000908152607b60205260408120829055607c80549293508592909190613fdd9084906151be565b909155505060408051838152602081018390526001600160a01b038616917fa740af14c56e4e04a617b1de1eb20de73270decbaaead14f142aabf3038e5ae2910161391b565b6001600160a01b03808216600081815260796020908152604080832081518083019092529381526001808501546001600160401b03600160401b9091048116938301938452607a8054928301815590945290517ff0440771a29e57e18c66727944770b82cc77924aef333c927ce6bdd2cdb3ae0390910180549251909316600160a01b026001600160e01b0319909216941693909317929092179091556128a78261496a565b6001600160401b03821660009081526077602090815260408083206001600160a01b038516845290915290205460ff16156141165760405162461bcd60e51b8152600401610c8f9061522d565b6001600160401b03821660009081526077602090815260408083206001600160a01b03851684529091528120805460ff1916600117905561415683612bcb565b6003810154909150600160401b90046001600160401b03166141a45760405162461bcd60e51b81526020600482015260076024820152664e4f5f4e4f444560c81b6044820152606401610c8f565b6003810154600160c01b90046001600160401b03166141c4816001615490565b6003830180546001600160c01b0316600160c01b6001600160401b03938416021790558416156113f4576003820154600090614208906001600160401b0316612bcb565b6004810180549192506001600160401b03909116906000614228836153b9565b91906101000a8154816001600160401b0302191690836001600160401b0316021790555050816001600160401b031660001415612bc457606554612bc490614279906001600160401b031643615490565b60038301805467ffffffffffffffff60801b1916600160801b6001600160401b0390931692909202919091179055565b6078805460018082019092557f8dc6fb69531d98d70dc0420e638d2dfd04e09e1ec783ede9aac77da9c5a0dac4810180546001600160a01b0319166001600160a01b0386169081179091556040805160a0810182528581526001600160401b038085166020808401918252607580548416858701908152600060608701818152608088018c81528a835260798652898320985189559551978c0180549351915196519888166001600160801b031990941693909317600160401b918816919091021768ffffffffffffffffff60801b1916600160801b9587169590950260ff60c01b191694909417600160c01b9615158702179055805484168352607782528583208784528252858320805460ff191690991790985587546001600160c01b03164390931690930291909117909555815194855284018590529192909160008051602061572e833981519152910160405180910390a2505050565b600061441d61441836859003850185615171565b6147bb565b8261442e60a0860160808701615055565b604051602001614440939291906156ad565b60405160208183030381529060405280519060200120905092915050565b60208101516000906001613145565b6000614477614bb1565b8251602001518190600381111561449057614490615030565b908160038111156144a3576144a3615030565b9052506020838101518101519082019060038111156144c4576144c4615030565b908160038111156144d7576144d7615030565b9052506144e2614bcf565b8351518152602080850151519082015260408401516145049083908390613a17565b949350505050565b6000808661451b57600061451e565b60015b6040516001600160f81b031960f883901b1660208201526021810188905260418101879052606181018690526081810185905290915060a1016040516020818303038152906040528051906020012091505095945050505050565b60006126ae61458f836020015160000151614ae5565b60208401515161459e90614af0565b61479f565b6145ab614afc565b6145b3614afc565b96875250602086019490945260408501929092526001600160401b0390811660608501529081166080840181905260a0840152431661014083015261016082015290565b6004820154600160401b90046001600160401b03166146385760048201805467ffffffffffffffff60401b1916600160401b436001600160401b0316021790555b600490910180546001600160401b03909216600160801b0267ffffffffffffffff60801b19909216919091179055565b60758054600160801b90046001600160401b0316906010614688836153b9565b825461010092830a6001600160401b03818102199092169282160291909117909255607554600160801b908190048316600090815260766020908152604091829020875181559087015160018201559086015160028201556060860151600382018054608089015160a08a015160c08b01519489166001600160801b031993841617600160401b928a168302176001600160801b03908116918a1688026001600160c01b0390811692909217600160c01b968b1687021790945560e08b0151600487018054998d01516101208e01516101408f0151938d169b9096169a909a17998b169093029890981790931691881690950290911617939094169093029190911790556101609092015160059092019190915550565b6040805160208101849052908101829052600090606001614440565b8051805160209182015192820151805190830151604080516c23b637b130b61039ba30ba329d60991b81870152602d810194909452604d8401959095526001600160c01b031960c092831b8116606d850152911b1660758201528251808203605d018152607d909101909252815191012090565b6000600183600381111561484557614845615030565b141561488b576040516b213637b1b59039ba30ba329d60a11b6020820152602c8101839052604c015b6040516020818303038152906040528051906020012090506126ae565b600283600381111561489f5761489f615030565b14156148d55760405174213637b1b59039ba30ba32961032b93937b932b21d60591b60208201526035810183905260550161486e565b60038360038111156148e9576148e9615030565b14156149185760405174213637b1b59039ba30ba3296103a37b7903330b91d60591b602082015260350161486e565b60405162461bcd60e51b815260206004820152601060248201526f4241445f424c4f434b5f53544154555360801b6044820152606401610c8f565b6000838383604051602001613ae0939291906156eb565b6001600160a01b0381166000908152607960205260409020600180820154607880546001600160401b039092169290916149a49190615019565b815481106149b4576149b46151d6565b600091825260209091200154607880546001600160a01b03909216916001600160401b0384169081106149e9576149e96151d6565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080607960006078846001600160401b031681548110614a3857614a386151d6565b6000918252602080832091909101546001600160a01b031683528201929092526040019020600101805467ffffffffffffffff19166001600160401b03929092169190911790556078805480614a9057614a90615697565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03949094168152607990935250506040812090815560010180546001600160c81b0319169055565b805160009081613145565b80516000906001613145565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060008152602001614b7b614afc565b815260006020820152604001614b8f614afc565b8152600060208201819052604082018190526060820181905260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b614be6614bfc565b815260200190600190039081614bde5790505090565b6040518060400160405280614c0f614bb1565b8152602001614c1c614bb1565b905290565b80356001600160a01b0381168114614c3857600080fd5b919050565b600080600060608486031215614c5257600080fd5b83359250614c6260208501614c21565b9150614c7060408501614c21565b90509250925092565b6001600160401b038116811461101057600080fd5b60008060408385031215614ca157600080fd5b8235614cac81614c79565b946020939093013593505050565b600060208284031215614ccc57600080fd5b5035919050565b600060208284031215614ce557600080fd5b6126cd82614c21565b60008060008385036101a0811215614d0557600080fd5b61016080821215614d1557600080fd5b9496948701359550505061018085013592915050565b600060208284031215614d3d57600080fd5b81356126cd81614c79565b60008060408385031215614d5b57600080fd5b50508035926020909101359150565b80604081018310156126ae57600080fd5b600080600080600080600080610280898b031215614d9857600080fd5b614da28a8a614d6a565b9750614db18a60408b01614d6a565b9650614dc08a60808b01614d6a565b95506101c089018a811115614dd457600080fd5b60c08a01955035614de481614c79565b93506101e08901359250614dfc8a6102008b01614d6a565b9150614e0c8a6102408b01614d6a565b90509295985092959890939650565b6000610180820190508251825260208301516020830152604083015160408301526060830151614e5660608401826001600160401b03169052565b506080830151614e7160808401826001600160401b03169052565b5060a0830151614e8c60a08401826001600160401b03169052565b5060c0830151614ea760c08401826001600160401b03169052565b5060e0830151614ec260e08401826001600160401b03169052565b50610100838101516001600160401b038116848301525050610120838101516001600160401b038116848301525050610140838101516001600160401b03811684830152505061016092830151919092015290565b60008060408385031215614f2a57600080fd5b8235614f3581614c79565b9150614f4360208401614c21565b90509250929050565b600080600060608486031215614f6157600080fd5b833592506020840135614f7381614c79565b91506040840135614f8381614c79565b809150509250925092565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252600d908201526c2727aa2fab20a624a220aa27a960991b604082015260600190565b6020808252600a90820152691393d517d4d51052d15160b21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561502b5761502b615003565b500390565b634e487b7160e01b600052602160045260246000fd5b803560048110614c3857600080fd5b60006020828403121561506757600080fd5b6126cd82615046565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156150a8576150a8615070565b60405290565b6000608082840312156150c057600080fd5b6150c8615086565b905082601f8301126150d957600080fd5b6150e1615086565b8060408401858111156150f357600080fd5b845b8181101561510d5780358452602093840193016150f5565b5081845285605f86011261512057600080fd5b615128615086565b9250829150608085018681111561513e57600080fd5b8082101561516357813561515181614c79565b8452602093840193919091019061513e565b505060208301525092915050565b60006080828403121561518357600080fd5b6126cd83836150ae565b60006000198214156151a1576151a1615003565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600082198211156151d1576151d1615003565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816151fb576151fb615003565b506000190190565b634e487b7160e01b600052601260045260246000fd5b60008261522857615228615203565b500490565b6020808252600e908201526d1053149150511657d4d51052d15160921b604082015260600190565b60006001600160401b038381169083168181101561527557615275615003565b039392505050565b600081600019048311821515161561529757615297615003565b500290565b600181815b808511156152d75781600019048211156152bd576152bd615003565b808516156152ca57918102915b93841c93908002906152a1565b509250929050565b6000826152ee575060016126ae565b816152fb575060006126ae565b8160018114615311576002811461531b57615337565b60019150506126ae565b60ff84111561532c5761532c615003565b50506001821b6126ae565b5060208310610133831016604e8410600b841016171561535a575081810a6126ae565b615364838361529c565b806000190482111561537857615378615003565b029392505050565b60006126cd83836152df565b60008261539b5761539b615203565b500690565b6000602082840312156153b257600080fd5b5051919050565b60006001600160401b03808316818114156153d6576153d6615003565b6001019392505050565b600060a082840312156153f257600080fd5b6153fa615086565b905061540683836150ae565b815261541460808301615046565b602082015292915050565b6000610160828403121561543257600080fd5b604051606081018181106001600160401b038211171561545457615454615070565b60405261546184846153e0565b81526154708460a085016153e0565b602082015261014083013561548481614c79565b60408201529392505050565b60006001600160401b038083168185168083038211156154b2576154b2615003565b01949350505050565b604081833760006040838101828152908301915b6002811015612bc45782356154e381614c79565b6001600160401b03168252602092830192909101906001016154cf565b6004811061551e57634e487b7160e01b600052602160045260246000fd5b9052565b61552c82826154bb565b61553860808201615046565b610d3a6080840182615500565b8581526101e0810161555a6020830187615522565b61556a60c0830160a08801615522565b61014086013561557981614c79565b6001600160401b03166101608301526101808201949094526101a08101929092526101c09091015292915050565b888152610200810160208083018a60005b60028110156155e3576155d3836155ce84615046565b615500565b91830191908301906001016155b8565b50505050606082018860005b60028110156156155761560283836154bb565b60809283019291909101906001016155ef565b5050506001600160401b03969096166101608201526001600160a01b03948516610180820152929093166101a08301526101c08201526101e001529392505050565b60006020828403121561566957600080fd5b81516126cd81614c79565b60006001600160401b0382168061568d5761568d615003565b6000190192915050565b634e487b7160e01b600052603160045260246000fd5b8381528260208201526000600483106156d657634e487b7160e01b600052602160045260246000fd5b5060f89190911b604082015260410192915050565b83815260006020848184015260408301845182860160005b8281101561571f57815184529284019290840190600101615703565b50919897505050505050505056feebd093d389ab57f3566918d2c379a2b4d9539e8eb95efad9d5e465457833fde6a2646970667358221220bafb65d6ae7e4388ad3c44c5e26c47e595e4f2de98d3c7b640fec174bdbbfdc864736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class RollupUserLogic__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "RollupUserLogic";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RollupUserLogic__factory = RollupUserLogic__factory;
RollupUserLogic__factory.bytecode = _bytecode;
RollupUserLogic__factory.abi = _abi;
