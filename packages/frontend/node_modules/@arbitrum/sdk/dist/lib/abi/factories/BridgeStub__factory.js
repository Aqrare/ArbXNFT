"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BridgeStub__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "outbox",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "BridgeCallTriggered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "inbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "enabled",
                type: "bool",
            },
        ],
        name: "InboxToggle",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "messageIndex",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "beforeInboxAcc",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "inbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "kind",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "messageDataHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "baseFeeL1",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "timestamp",
                type: "uint64",
            },
        ],
        name: "MessageDelivered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "outbox",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "enabled",
                type: "bool",
            },
        ],
        name: "OutboxToggle",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "newSequencerInbox",
                type: "address",
            },
        ],
        name: "SequencerInboxUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "acceptFundsFromOldBridge",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "activeOutbox",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "allowedDelayedInboxList",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "inbox",
                type: "address",
            },
        ],
        name: "allowedDelayedInboxes",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "allowedOutboxList",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "allowedOutboxes",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "delayedInboxAccs",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "delayedMessageCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "kind",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "messageDataHash",
                type: "bytes32",
            },
        ],
        name: "enqueueDelayedMessage",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "afterDelayedMessagesRead",
                type: "uint256",
            },
        ],
        name: "enqueueSequencerMessage",
        outputs: [
            {
                internalType: "uint256",
                name: "seqMessageIndex",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "beforeAcc",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "delayedAcc",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "acc",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "executeCall",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "rollup",
        outputs: [
            {
                internalType: "contract IOwnable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerInbox",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "sequencerInboxAccs",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequencerMessageCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "inbox",
                type: "address",
            },
            {
                internalType: "bool",
                name: "enabled",
                type: "bool",
            },
        ],
        name: "setDelayedInbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        name: "setOutbox",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_sequencerInbox",
                type: "address",
            },
        ],
        name: "setSequencerInbox",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "batchPoster",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "dataHash",
                type: "bytes32",
            },
        ],
        name: "submitBatchSpendingReport",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610bd5806100206000396000f3fe6080604052600436106101035760003560e01c80639e5d4c49116100a0578063d5719dc211610064578063d5719dc21461032b578063e76f5c8d1461034b578063e77145f41461019c578063eca067ad1461036b578063ee35f3271461038057600080fd5b80639e5d4c491461026c578063ab5d89431461029a578063ae60bd13146102ba578063cb23bcb5146102f6578063cee3d7281461030b57600080fd5b806284120c1461010857806316bf55791461012c578063413b35bd1461014c57806347fb24c51461017c5780634f61f8501461019e5780637a88b107146101be578063845bde82146101e15780638db5993b14610221578063945e114714610234575b600080fd5b34801561011457600080fd5b506005545b6040519081526020015b60405180910390f35b34801561013857600080fd5b5061011961014736600461091c565b6103a0565b34801561015857600080fd5b5061016c610167366004610951565b6103c1565b6040519015158152602001610123565b34801561018857600080fd5b5061019c610197366004610973565b6103e4565b005b3480156101aa57600080fd5b5061019c6101b9366004610951565b610610565b3480156101ca57600080fd5b506101196101d93660046109af565b600092915050565b3480156101ed57600080fd5b506102016101fc3660046109d9565b610664565b604080519485526020850193909352918301526060820152608001610123565b61011961022f3660046109fb565b610743565b34801561024057600080fd5b5061025461024f36600461091c565b6107ac565b6040516001600160a01b039091168152602001610123565b34801561027857600080fd5b5061028c610287366004610a3f565b6107d6565b604051610123929190610ac6565b3480156102a657600080fd5b50600354610254906001600160a01b031681565b3480156102c657600080fd5b5061016c6102d5366004610951565b6001600160a01b031660009081526020819052604090206001015460ff1690565b34801561030257600080fd5b506102546103c1565b34801561031757600080fd5b5061019c610326366004610973565b6107f2565b34801561033757600080fd5b5061011961034636600461091c565b61080a565b34801561035757600080fd5b5061025461036636600461091c565b61081a565b34801561037757600080fd5b50600454610119565b34801561038c57600080fd5b50600654610254906001600160a01b031681565b600581815481106103b057600080fd5b600091825260209091200154905081565b600060405162461bcd60e51b81526004016103db90610b25565b60405180910390fd5b6001600160a01b03821660008181526020818152604091829020600181015492518515158152909360ff90931692917f6675ce8882cb71637de5903a193d218cc0544be9c0650cb83e0955f6aa2bf521910160405180910390a28080156104485750825b8061045a57508015801561045a575082155b156104655750505050565b82156104f15760408051808201825260018054825260208083018281526001600160a01b0389166000818152928390529482209351845551928201805460ff1916931515939093179092558054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916909117905561060a565b60018054610500908290610b4e565b8154811061051057610510610b73565b6000918252602090912001548254600180546001600160a01b0390931692909190811061053f5761053f610b73565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160000154600080600185600001548154811061058c5761058c610b73565b60009182526020808320909101546001600160a01b0316835282019290925260400190205560018054806105c2576105c2610b89565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038616825281905260408120908155600101805460ff191690555b50505050565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f8c1e6003ed33ca6748d4ad3dd4ecc949065c89dceb31fdf546a5289202763c6a9060200160405180910390a150565b60055460008080831561069f576005805461068190600190610b4e565b8154811061069157610691610b73565b906000526020600020015492505b84156106d05760046106b2600187610b4e565b815481106106c2576106c2610b73565b906000526020600020015491505b60408051602081018590529081018790526060810183905260800160408051601f198184030181529190528051602090910120600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001819055939692955090935050565b3360009081526020819052604081206001015460ff166107965760405162461bcd60e51b815260206004820152600e60248201526d09c9ea8be8ca49e9abe929c849eb60931b60448201526064016103db565b6107a484844342488761082a565b949350505050565b600281815481106107bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000606060405162461bcd60e51b81526004016103db90610b25565b60405162461bcd60e51b81526004016103db90610b25565b600481815481106103b057600080fd5b600181815481106107bc57600080fd5b60045460408051600060208083018290526021830182905260358301829052603d8301829052604583018290526065830182905260858084018790528451808503909101815260a590930190935281519190920120909190600082156108b5576004610897600185610b4e565b815481106108a7576108a7610b73565b906000526020600020015490505b6040805160208082019390935280820193909352805180840382018152606090930190528151910120600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0155979650505050505050565b60006020828403121561092e57600080fd5b5035919050565b80356001600160a01b038116811461094c57600080fd5b919050565b60006020828403121561096357600080fd5b61096c82610935565b9392505050565b6000806040838503121561098657600080fd5b61098f83610935565b9150602083013580151581146109a457600080fd5b809150509250929050565b600080604083850312156109c257600080fd5b6109cb83610935565b946020939093013593505050565b600080604083850312156109ec57600080fd5b50508035926020909101359150565b600080600060608486031215610a1057600080fd5b833560ff81168114610a2157600080fd5b9250610a2f60208501610935565b9150604084013590509250925092565b60008060008060608587031215610a5557600080fd5b610a5e85610935565b935060208501359250604085013567ffffffffffffffff80821115610a8257600080fd5b818701915087601f830112610a9657600080fd5b813581811115610aa557600080fd5b886020828501011115610ab757600080fd5b95989497505060200194505050565b821515815260006020604081840152835180604085015260005b81811015610afc57858101830151858201606001528201610ae0565b81811115610b0e576000606083870101525b50601f01601f191692909201606001949350505050565b6020808252600f908201526e1393d517d253541311535153951151608a1b604082015260600190565b600082821015610b6e57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212200a3b00bc7059de873a7777367f6362a6549f0173d01496149c15df51c1d8915364736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class BridgeStub__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "BridgeStub";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BridgeStub__factory = BridgeStub__factory;
BridgeStub__factory.bytecode = _bytecode;
BridgeStub__factory.abi = _abi;
